Class Port.SourceControl.Util [ Abstract ]
{

Parameter DEFAULTPATH = "/CacheProjects/{NAMESPACE}/{PROJECT}";

ClassMethod GetFullItemPath(itemName As %String) As %String
{
  
  set fullPath = ""
  set type = ##class(Port.Project.Helper).GetItemExtension(itemName)
  set defaultPath = ##class(%File).NormalizeFilename(##class(Port.SourceControl.Config).GetExportPath())
  
  if type = "CLS" {
    set fullPath = ##class(Port.Project.Helper).ClassToFile(defaultPath_"/cls", $piece(itemName, ".", 1, *))
  } elseif ##class(Port.Project.Helper).IsRoutine(itemName) {
    set ext = $$$lcase(type)
    set fileName = $$$lcase(itemName)_".txt"
    set fullPath = ##class(%File).NormalizeFilename(defaultPath_"/"_ext_"/"_fileName) 
  } elseif type = "PKG" {
    set fullPath = ##class(%File).GetDirectory(##class(Port.Project.Helper).ClassToFile(defaultPath_"/cls", itemName))
  } else {
    set sourceFilePath = $replace(itemName, $System.CSP.GetDefaultApp($namespace), "/web")    
    set fullPath = ##class(%File).NormalizeFilename(defaultPath_sourceFilePath) 
  } 
  quit fullPath
}

ClassMethod ResolveInternalName(internalName As %String) As %String
{
  set name = internalName
  if internalName '[ $System.CSP.GetDefaultApp($namespace) {
    set name = $piece(internalName, ".", 1, *-1)
  }
  quit name
}

ClassMethod AssertTestableClass(className, Output testableClass As %String = "") As %Boolean
{
  set prefix = ##class(Port.SourceControl.Config).GetTestClassPrefix()
  set rootPackage = $piece(className, ".")  
  
  if rootPackage = prefix {
    set testableClass = className
  } elseif ##class(%Dictionary.ClassDefinition).%ExistsId(prefix_"."_className) {
    set testableClass = prefix_"."_className 
  }
  quit (testableClass '= "")
}

ClassMethod LinkRepositoryToVCS(path As %String) As Port.SourceControl.Extension.VCS
{
  set handler = ##class(Port.SourceControl.Config).GetVCSHandlerName()
  set vcs = ""
  try {
    set vcs = $classmethod(handler, "%New", path)
  } catch ex {
    // Nothing here. I wouldn't do that if %New didn't triggered an exception.
    // Seriously...
  }
  quit vcs
}

}

